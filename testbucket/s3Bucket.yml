Description: >
  AWS IAM Role with S3 Bucket Policies
Resources:
  IamRole1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - s3.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
   
  IamRole2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - s3.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  onyis3bucket101:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: onyis3bucket101
    DeletionPolicy: Retain
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: string
      PolicyDocument:
        BucketName: !Ref onyis3bucket101
        Version: '2012-10-17'
        Statement:
        - Sid: AddPerm
          Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::onyis3bucket101/*
          - arn:aws:iam:::IamRole1/S3Access
          Principal: "*"
          
        - Sid: AddPerm
          Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          Resource:
          - arn:aws:s3:::onyis3bucket101/*
          - arn:aws:iam:::IamRole2/S3Access
          Principal: "*"
          Condition: 
Outputs:
  S3Bucket:
    Description: S3 bucket Name
    Value:
      !Ref onyis3bucket101
  IamRole1:
    Description: Iam Role to manage S3 Bucket
    Value:
      !Ref IamRole1 
  IamRole2:
    Description: Iam Role to access Read and Write in the Bucket
    Value:
      !Ref IamRole2
  BucketPolicy:
    Description: S3 Bucket Polices
    Value:
      !Ref BucketPolicy

